kable_styling("striped") %>%
row_spec(0, bold = "T")
?head
head(ensembleClassifyResults$WINNER_IMPORTANCE, addrownums = TRUE)
head(ensembleClassifyResults$WINNER_IMPORTANCE, addrownums = TRUE) %>%
kable()%>%
kable_styling("striped")
head(ensembleClassifyResults$WINNER_IMPORTANCE, addrownums = TRUE)
head(ensembleClassifyResults$WINNER_IMPORTANCE, addrownums = TRUE) %>%
kable()%>%
kable_styling("striped") %>%
row_spec(0, bold = "T")
head(ensembleClassifyResults$WINNER_IMPORTANCE, addrownums = TRUE) %>%
mutate("Rank"=n) %>%
kable()%>%
kable_styling("striped") %>%
row_spec(0, bold = "T")
head(ensembleClassifyResults$WINNER_IMPORTANCE, addrownums = TRUE) %>%
mutate("Rank"=row_number()) %>%
kable()%>%
kable_styling("striped") %>%
row_spec(0, bold = "T")
head(ensembleClassifyResults$WINNER_IMPORTANCE, addrownums = TRUE) %>%
mutate("Rank"=row_number(),everything()) %>%
kable()%>%
kable_styling("striped") %>%
row_spec(0, bold = "T")
head(ensembleClassifyResults$WINNER_IMPORTANCE, addrownums = TRUE) %>%
mutate("Rank"=row_number) %>%
select(Rank, everything())
head(ensembleClassifyResults$WINNER_IMPORTANCE, addrownums = TRUE) %>%
mutate("Rank"=row_number) %>%
select("Rank", everything()) %>%
kable()%>%
kable_styling("striped") %>%
row_spec(0, bold = "T")
head(ensembleClassifyResults$WINNER_IMPORTANCE, addrownums = TRUE) %>%
mutate("Rank"=row_number()) %>%
select("Rank", everything()) %>%
kable()%>%
kable_styling("striped") %>%
row_spec(0, bold = "T")
tail(ensembleClassifyResults$WINNER_IMPORTANCE) %>% kable()%>%
select( Rank = 1, everything() ) %>%
kable_styling("striped") %>%
row_spec(0, bold = "T")
tail(ensembleClassifyResults$WINNER_IMPORTANCE) %>%
select( Rank = 1, everything() ) %>%
kable() %>%
kable_styling("striped") %>%
row_spec(0, bold = "T")
tail(ensembleClassifyResults$WINNER_IMPORTANCE, keep.rownames = TRUE) %>%
kable() %>%
kable_styling("striped") %>%
row_spec(0, bold = "T")
tail(ensembleClassifyResults$WINNER_IMPORTANCE, keep.rownames = FALSE) %>%
kable() %>%
kable_styling("striped") %>%
row_spec(0, bold = "T")
tail(ensembleClassifyResults$WINNER_IMPORTANCE, addrownums = FALSE) %>%
kable() %>%
kable_styling("striped") %>%
row_spec(0, bold = "T")
tail(ensembleClassifyResults$WINNER_IMPORTANCE, addrownums = FALSE)
tail(ensembleClassifyResults$WINNER_IMPORTANCE, addrownums = FALSE) %>% setDF()%>%
kable() %>%
kable_styling("striped") %>%
row_spec(0, bold = "T")
tail(ensembleClassifyResults$WINNER_IMPORTANCE, addrownums = FALSE) %>% setDT()%>%
kable() %>%
kable_styling("striped") %>%
row_spec(0, bold = "T")
tail(ensembleClassifyResults$WINNER_IMPORTANCE, addrownums = FALSE) %>% as.tibble()%>%
kable() %>%
kable_styling("striped") %>%
row_spec(0, bold = "T")
?as.tibble
?as_tibble
tail(ensembleClassifyResults$WINNER_IMPORTANCE, addrownums = FALSE) %>%
as_tibble(rownames="Rank")%>%
kable() %>%
kable_styling("striped") %>%
row_spec(0, bold = "T")
tail(ensembleClassifyResults$WINNER_IMPORTANCE, addrownums = TRUE) %>%
as_tibble(rownames="Rank")%>%
kable() %>%
kable_styling("striped") %>%
row_spec(0, bold = "T")
tail(ensembleClassifyResults$WINNER_IMPORTANCE) %>%
as_tibble(rownames="Rank")%>%
kable() %>%
kable_styling("striped") %>%
row_spec(0, bold = "T")
tail(ensembleClassifyResults$WINNER_IMPORTANCE) %>%
as_tibble()%>%
kable() %>%
kable_styling("striped") %>%
row_spec(0, bold = "T")
tail(ensembleClassifyResults$WINNER_IMPORTANCE) %>%
as_tibble()%>%
mutate(Rank=1::5)
tail(ensembleClassifyResults$WINNER_IMPORTANCE) %>%
as_tibble()%>%
mutate(Rank=1::5) %>%
tail(ensembleClassifyResults$WINNER_IMPORTANCE) %>%
as_tibble()%>%
mutate(Rank=1:5) %>%
kable() %>%
kable_styling("striped") %>%
row_spec(0, bold = "T")
tail(ensembleClassifyResults$WINNER_IMPORTANCE) %>%
as_tibble()%>%
mutate(Rank=1:6) %>%
kable() %>%
kable_styling("striped") %>%
row_spec(0, bold = "T")
length(ensembleClassifyResults$WINNER_IMPORTANCE)
ensembleClassifyResults$WINNER_IMPORTANCE
nrow(ensembleClassifyResults$WINNER_IMPORTANCE)
feature_count<-nrow(ensembleClassifyResults$WINNER_IMPORTANCE)
tail(ensembleClassifyResults$WINNER_IMPORTANCE) %>%
as_tibble()%>%
mutate(Rank=feature_count-5:feature_count) %>%
kable() %>%
kable_styling("striped") %>%
row_spec(0, bold = "T")
tail(ensembleClassifyResults$WINNER_IMPORTANCE) %>%
as_tibble()%>%
mutate(Rank=feature_count-6:feature_count) %>%
kable() %>%
kable_styling("striped") %>%
row_spec(0, bold = "T")
feature_count<-nrow(ensembleClassifyResults$WINNER_IMPORTANCE)
feature_count
feature_count-6
24:30
length(24:30)
length(feature_count-5:feature_count)
length((feature_count-5):feature_count)
tail(ensembleClassifyResults$WINNER_IMPORTANCE) %>%
as_tibble()%>%
mutate(Rank=(feature_count-5):feature_count) %>%
kable() %>%
kable_styling("striped") %>%
row_spec(0, bold = "T")
tail(ensembleClassifyResults$WINNER_IMPORTANCE) %>%
as_tibble()%>%
mutate(Rank=(feature_count-5):feature_count) %>%
select("Rank", everything()) %>%
kable() %>%
kable_styling("striped") %>%
row_spec(0, bold = "T")
rmse_table<-ensembleRegressionResults$RMSE_results %>%
data.frame()
rmse_table %>%
rename("Root Mean-Squared Error"=".") %>%
mutate(Model=rownames(rmse_table)) %>%
select(Model,everything()) %>%
arrange(desc(`Root Mean-Squared Error`)) %>%
mutate(`Root Mean-Squared Error`=paste0("$",round(`Root Mean-Squared Error`,0))) %>%
kable()%>%
kable_styling("striped") %>%
row_spec(0, bold = "T")
head(ensembleRegressionResults$WINNER_IMPORTANCE) %>%
mutate("Rank"=row_number()) %>%
select("Rank", everything()) %>%
kable()%>%
kable_styling("striped") %>%
row_spec(0, bold = "T")
tail(ensembleRegressionResults$WINNER_IMPORTANCE) %>%
mutate(Rank=(feature_count-5):feature_count) %>%
select("Rank", everything()) %>%
kable()%>%
kable_styling("striped") %>%
row_spec(0, bold = "T")
rmse_table<-ensembleRegressionResults$RMSE_results %>%
data.frame()
rmse_table %>%
rename("Root Mean-Squared Error"=".") %>%
mutate(Model=rownames(rmse_table)) %>%
select(Model,everything()) %>%
arrange(`Root Mean-Squared Error`) %>%
mutate("Rank"=row_number()) %>%
select("Rank", everything()) %>%
mutate(`Root Mean-Squared Error`=paste0("$",round(`Root Mean-Squared Error`,0))) %>%
kable()%>%
kable_styling("striped") %>%
row_spec(0, bold = "T")
acc_table<-ensembleClassifyResults$Accuracies %>%
data.frame()
acc_table %>%
rename("Percentage Accurate"=".") %>%
mutate(Model=rownames(acc_table)) %>%
select(Model,everything()) %>%
arrange(desc(`Percentage Accurate`)) %>%
mutate("Rank"=row_number()) %>%
select("Rank", everything()) %>%
kable()%>%
kable_styling("striped") %>%
row_spec(0, bold = "T")
toTitleCase
?toTitleCase
toTitleCase()
str_to_title("adkfj_adfd")
acc_table %>%
rename("Percentage Accurate"=".") %>%
mutate(Model=str_to_title(rownames(acc_table))) %>%
select(Model,everything()) %>%
arrange(desc(`Percentage Accurate`)) %>%
mutate("Rank"=row_number()) %>%
select("Rank", everything()) %>%
kable()%>%
kable_styling("striped") %>%
row_spec(0, bold = "T")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(readxl)
library(skimr)
library(pander)
t.test(salaryAttrition$predictMinusObservered~trainValidationSet$Attrition, conf.level=0.50)
t.test(salaryAttrition$predictMinusObservered~trainValidationSet$Attrition, conf.level=0.30)
t.test(salaryAttrition$predictMinusObservered~trainValidationSet$Attrition, conf.level=0.01)
ggplot(att_pruned, aes(x=MonthlyIncome, fill = Attrition)) +
geom_histogram(alpha = 0.5, aes(), position = 'identity',bins=10) +
scale_fill_discrete(name = "Attrition", labels = c("No", "Yes"))
ggplot(att_pruned, aes(x=MonthlyIncome, fill = Attrition)) +
geom_histogram(alpha = 0.5, aes(), position = 'identity',bins=10) +
scale_fill_discrete(name = "Attrition", labels = c("No", "Yes"))
ggplot(att_pruned, aes(x=MonthlyIncome, fill = Attrition)) +
geom_histogram(alpha = 0.5, aes(), position = 'identity',bins=10) +
scale_fill_discrete(name = "Attrition", labels = c("No", "Yes"))
ggplot(att_pruned, aes(x=MonthlyIncome, fill = Attrition)) +
geom_histogram(alpha = 0.5, aes(), position = 'identity',bins=10) +
scale_fill_discrete(name = "Attrition", labels = c("No", "Yes")) +
theme(legend.title = element_text(color = "blue", size = 14),
legend.text = element_text(color = "red", size = 10))
ggplot(att_pruned, aes(x=MonthlyIncome, fill = Attrition)) +
geom_histogram(alpha = 0.5, aes(), position = 'identity',bins=10) +
scale_fill_discrete(name = "Attrition", labels = c("No", "Yes")) +
theme(legend.title = element_text(color = "blue", size = 40),
legend.text = element_text(color = "red", size = 40))
ggplot(att_pruned, aes(x=MonthlyIncome, fill = Attrition)) +
geom_histogram(alpha = 0.5, aes(), position = 'identity',bins=10) +
scale_fill_discrete(name = "Attrition", labels = c("No", "Yes")) +
theme(legend.title = element_text(size = 40),
legend.text = element_text(size = 40))
ggplot(att_pruned, aes(x=MonthlyIncome, fill = Attrition)) +
geom_histogram(alpha = 0.5, aes(), position = 'identity',bins=10) +
scale_fill_discrete(name = "Attrition", labels = c("No", "Yes")) +
theme(legend.title = element_text(size = 30),
legend.text = element_text(size = 30))
ggplot(att_pruned, aes(x=MonthlyIncome, fill = Attrition)) +
geom_histogram(alpha = 0.5, aes(), position = 'identity',bins=10) +
scale_fill_discrete(name = "Attrition", labels = c("No", "Yes")) +
theme(legend.title = element_text(size = 30),
legend.text = element_text(size = 30))+
labs(title = "Employee Salary Histogram by Attrition")
ggplot(att_pruned, aes(x=MonthlyIncome, fill = Attrition)) +
geom_histogram(alpha = 0.5, aes(), position = 'identity',bins=30) +
scale_fill_discrete(name = "Attrition", labels = c("No", "Yes")) +
theme(legend.title = element_text(size = 30),
legend.text = element_text(size = 30))+
labs(title = "Employee Salary Histogram by Attrition")
ggplot(att_pruned, aes(x=MonthlyIncome, fill = Attrition)) +
geom_histogram(alpha = 0.5, aes(), position = 'identity',bins=30) +
scale_fill_discrete(name = "Attrition", labels = c("No", "Yes")) +
theme(legend.title = element_text(size = 30),
legend.text = element_text(size = 30), text =element_text(size = 30))+
labs(title = "Employee Salary Histogram by Attrition")
ggplot(att_pruned, aes(x=MonthlyIncome, fill = Attrition)) +
geom_histogram(alpha = 0.5, aes(), position = 'identity',bins=30) +
scale_fill_discrete(name = "Attrition", labels = c("No", "Yes")) +
theme(text =element_text(size = 30)) +
labs(title = "Employee Salary Histogram by Attrition")
ggplot(att_pruned, aes(x=MonthlyIncome, fill = Attrition)) +
geom_histogram(alpha = 0.5, aes(), position = 'identity',bins=30) +
scale_fill_discrete(name = "Attrition", labels = c("No", "Yes")) +
theme(text =element_text(size = 30)) +
labs(title = "Employee Salary Histogram by Attrition") +
xlab("Monthly Income ($")
ggplot(att_pruned, aes(x=MonthlyIncome, fill = Attrition)) +
geom_histogram(alpha = 0.5, aes(), position = 'identity',bins=30) +
scale_fill_discrete(name = "Attrition", labels = c("No", "Yes")) +
theme(text =element_text(size = 30)) +
labs(title = "Employee Salary Histogram by Attrition") +
xlab("Monthly Income ($)")
?margin
ggplot(att_pruned, aes(x=MonthlyIncome, fill = Attrition)) +
geom_histogram(alpha = 0.5, aes(), position = 'identity',bins=30) +
scale_fill_discrete(name = "Attrition", labels = c("No", "Yes")) +
theme(text =element_text(size = 30)) +
labs(title = "Employee Salary Histogram by Attrition") +
xlab("Monthly Income ($)") +
margin(t = 0, r = 0, b = 4, l = 0, "cm")
ggplot(att_pruned, aes(x=MonthlyIncome, fill = Attrition)) +
geom_histogram(alpha = 0.5, aes(), position = 'identity',bins=30) +
scale_fill_discrete(name = "Attrition", labels = c("No", "Yes")) +
theme(text =element_text(size = 30), plot.margin=unit(c(1,1,1.5,1.2),"cm")) +
labs(title = "Employee Salary Histogram by Attrition") +
xlab("Monthly Income ($)")
salary_predictVSactual_attritionPLOT<-trainValidationSet %>%
ggplot(aes(x=ensembleRegressionresults$WINNER_Predictions, y=MonthlyIncome, color=Attrition)) + geom_jitter() +
theme(text =element_text(size = 30), plot.margin=unit(c(0,0,6,0),"cm"))
protectedClassesPLOT + theme(text =element_text(size = 30), plot.margin=unit(c(0,0,6,0),"cm"))
protectedClassesPLOT + theme(text =element_text(size = 20), plot.margin=unit(c(0,0,6,0),"cm"))
protectedClassesPLOT + theme(text =element_text(size = 15), plot.margin=unit(c(0,0,6,0),"cm"))
TTEST_ATT_PREDSALARYDIFFERENCE
salary_predictVSactual_attritionPLOT
salary_predictVSactual_attritionPLOT + theme(text =element_text(size = 30), plot.margin=unit(c(0,0,6,0),"cm"))
TTEST_ATT_PREDSALARYDIFFERENCE
salary_predictVSactual_attritionPLOT + theme(text =element_text(size = 10), plot.margin=unit(c(0,0,6,0),"cm"))
TTEST_ATT_PREDSALARYDIFFERENCE
salary_predictVSactual_attritionPLOT +  plot.margin=unit(c(0,0,6,0),"cm"))
protectedClassesPLOT + theme(text =element_text(size = 15), plot.margin=unit(c(0,0,6,0),"cm")) +     scale_fill_discrete(name = "Attrition", labels = c("No", "Yes"))
protectedClassesPLOT + theme(text =element_text(size = 15), plot.margin=unit(c(0,0,6,0),"cm")) +     scale_fill_discrete(name = "Attrition", labels = c("No", "Yes")) + + scale_x_discrete(labels=c("0.5" = "Dose 0.5", "1" = "Dose 1",
"2" = "Dose 2"))
protectedClassesPLOT + theme(text =element_text(size = 15), plot.margin=unit(c(0,0,6,0),"cm")) +     scale_fill_discrete(name = "Attrition", labels = c("No", "Yes")) +  scale_x_discrete(labels=c("0.5" = "Dose 0.5", "1" = "Dose 1",
"2" = "Dose 2"))
protectedClassesPLOT + theme(text =element_text(size = 15), plot.margin=unit(c(0,0,6,0),"cm")) +     scale_fill_discrete(name = "Attrition", labels = c("No", "Yes")) +  scale_x_discrete(labels=c("0" = "No", "1" = "Yes"))
salary_predictVSactual_attritionPLOT +  plot.margin=unit(c(0,0,6,0),"cm")) +    scale_fill_discrete(name = "Attrition", labels = c("No", "Yes"))
salary_predictVSactual_attritionPLOT +  plot.margin=unit(c(0,0,6,0),"cm")) +    scale_fill_discrete(name = "Attrition", labels = c("No", "Yes"))
salary_predictVSactual_attritionPLOT +  plot.margin=unit(c(0,0,6,0),"cm") +    scale_fill_discrete(name = "Attrition", labels = c("No", "Yes"))
salary_predictVSactual_attritionPLOT +  plot.margin=unit(c(0,0,6,0),"cm"))
salary_predictVSactual_attritionPLOT
TTEST_ATT_PREDSALARYDIFFERENCE
salary_predictVSactual_attritionPLOT    _ scale_fill_discrete(name = "Attrition", labels = c("No", "Yes"))
salary_predictVSactual_attritionPLOT+ scale_fill_discrete(name = "Attrition", labels = c("No", "Yes"))
salary_predictVSactual_attritionPLOT+ scale_fill_continuous(name = "Attrition", labels = c("No", "Yes"))
salary_predictVSactual_attritionPLOT+ scale_fill_discrete(name = "Dose", labels = c("A", "B", "C"))
salary_predictVSactual_attritionPLOT+ scale_fill_discrete(name = "Dose", labels = c("A", "B", "C"))
salary_predictVSactual_attritionPLOT
salary_predictVSactual_attritionPLOT
salary_predictVSactual_attritionPLOT<-trainValidationSet %>%
ggplot(aes(x=ensembleRegressionresults$WINNER_Predictions, y=MonthlyIncome, color=Attrition)) + geom_jitter()
salary_predictVSactual_attritionPLOT
protectedClassesPLOT + theme(text =element_text(size = 15), plot.margin=unit(c(0,0,6,0),"cm"))  scale_x_discrete(labels=c("0" = "No", "1" = "Yes"))
protectedClassesPLOT + theme(text =element_text(size = 15), plot.margin=unit(c(0,0,6,0),"cm")) +scale_x_discrete(labels=c("0" = "No", "1" = "Yes"))
salary_predictVSactual_attritionPLOT + xlab("Predicted Salary")
salary_predictVSactual_attritionPLOT + xlab("Predicted Monthly Income($)") + ylab("Actual Monthly Income($)")
salary_predictVSactual_attritionPLOT + xlab("Predicted Monthly Income($)") + ylab("Actual Monthly Income($)")+   scale_color_manual(labels = "Attrition", values = c("No", "Yes"))
salary_predictVSactual_attritionPLOT + xlab("Predicted Monthly Income($)") + ylab("Actual Monthly Income($)")+   scale_color_manual( labels = c("No", "Yes"))
salary_predictVSactual_attritionPLOT + xlab("Predicted Monthly Income($)") + ylab("Actual Monthly Income($)")+   scale_color_manual(labels = c("No", "Yes"))
salary_predictVSactual_attritionPLOT + xlab("Predicted Monthly Income($)") + ylab("Actual Monthly Income($)")+   scale_color_manual(values = c("No", "Yes"))
salary_predictVSactual_attritionPLOT + xlab("Predicted Monthly Income($)") + ylab("Actual Monthly Income($)")+scale_color_manual(labels = c("T999", "T888"))
salary_predictVSactual_attritionPLOT + xlab("Predicted Monthly Income($)") + ylab("Actual Monthly Income($)")+scale_color_manual(labels = c("T999", "T888"))
salary_predictVSactual_attritionPLOT + xlab("Predicted Monthly Income($)") + ylab("Actual Monthly Income($)")+ scale_fill_discrete(name = "Attrition", labels = c("No","Yes"))
salary_predictVSactual_attritionPLOT + xlab("Predicted Monthly Income($)") + ylab("Actual Monthly Income($)")+ scale_color_discrete(name = "Attrition", labels = c("No","Yes"))
salary_predictVSactual_attritionPLOT +
xlab("Predicted Monthly Income($)") +
ylab("Actual Monthly Income($)")+ scale_color_discrete(name = "Attrition", labels = c("No","Yes")) +
theme(text =element_text(size = 30), plot.margin=unit(c(0,0,6,0),"cm")) +
+_ad
salary_predictVSactual_attritionPLOT +
xlab("Predicted Monthly Income($)") +
ylab("Actual Monthly Income($)")+ scale_color_discrete(name = "Attrition", labels = c("No","Yes")) +
theme(text =element_text(size = 30), plot.margin=unit(c(0,0,6,0),"cm"))
salary_predictVSactual_attritionPLOT +
xlab("Predicted Monthly Income($)") +
ylab("Actual Monthly Income($)")+ scale_color_discrete(name = "Attrition", labels = c("No","Yes")) +
theme(plot.margin=unit(c(0,0,6,0),"cm"))
salaryAttrition
salaryAttrition %>% group_by(Attrition) %>% aggregate(predict_actual_avg=mean(predictMinusObservered))
salaryAttrition %>% group_by(Attrition) %>% aggregate(predict_actual_avg=mean(predictMinusObservered))
salaryAttrition %>% group_by(Attrition)
salaryAttrition %>% group_by(Attrition) %>% aggregate(n=n())
salaryAttrition
salaryAttrition %>% group_by(Attrition)
salaryAttrition %>% group_by(Attrition) %>% sum()
salaryAttrition %>% group_by(Attrition) %>% summarise()
salaryAttrition %>% group_by(Attrition) %>% summarise(predictMinusObservered)
salaryAttrition %>% group_by(Attrition) %>% aggregate(predictMinusObservered)
salaryAttrition %>% group_by(Attrition) %>% aggregate(mean(predictMinusObservered))
salaryAttrition %>% group_by(Attrition) %>% aggregate(FUN=mean(predictMinusObservered))
salaryAttrition %>% group_by(Attrition) %>% aggregate()
salaryAttrition %>% group_by(Attrition) %>% summarize(meanDif=mean(predictMinusObservered))
salaryAttrition %>% group_by(Attrition) %>% aggregate(meanDif=mean(predictMinusObservered))
salaryAttrition %>% aggregate(by=Attrition,FUN=mean)
salaryAttrition %>% aggregate(by="Attrition",FUN=mean)
salaryAttrition %>% aggregate(by=c("Attrition"),FUN=mean)
salaryAttrition %>% aggregate(by=list("Attrition"),FUN=mean)
salaryAttrition %>%
group_by(Attrition) %>%
summarise(funs(mean(., na.rm=TRUE)))
salaryAttrition %>%
group_by(Attrition) %>%
summarise(funs(mean(predictMinusObservered, na.rm=TRUE)))
salaryAttrition %>%
group_by(Attrition) %>%
summarise(mean(predictMinusObservered, na.rm=TRUE))
salaryAttrition %>%
group_by(Attrition) %>%
summarise(mean(predictMinusObservered, na.rm=TRUE))
salaryAttrition %>%
group_by(Attrition) %>%
summarise(mean(predictMinusObservered, na.rm=TRUE)) %>%
rename("Average Difference between Predicted and Actual Monthly Income($)")
salaryAttrition %>%
group_by(Attrition) %>%
summarise(mean(predictMinusObservered, na.rm=TRUE)) %>%
rename("Average Difference between Predicted and Actual Monthly Income($)"=2)
salaryAttrition %>%
group_by(Attrition) %>%
summarise(mean(predictMinusObservered, na.rm=TRUE)) %>%
rename("Avg. Difference between Predicted and Actual Income($)"=2)
salaryAttrition %>%
group_by(Attrition) %>%
summarise(mean(predictMinusObservered, na.rm=TRUE)) %>%
rename("Avg. Difference between Predicted and Actual Income($)"=2) %>%
mutate(Attrition=ifelse(Attrition==1,"Yes","No"))
salaryAttrition %>%
group_by(Attrition) %>%
summarise(mean(predictMinusObservered, na.rm=TRUE)) %>%
rename("Avg. Difference between Predicted and Actual Income($)"=2) %>%
mutate(Attrition=ifelse(Attrition==1,"Yes","No"))  %>%
kable()%>%
kable_styling("striped") %>%
row_spec(0, bold = "T")
t.test(salaryAttrition$predictMinusObservered~trainValidationSet$Attrition)
TTEST_ATT_PREDSALARYDIFFERENCE<-t.test(salaryAttrition$predictMinusObservered~trainValidationSet$Attrition, conf.level=.9)
salaryAttrition %>%
group_by(Attrition) %>%
summarise(mean(predictMinusObservered, na.rm=TRUE))
TTEST_ATT_PREDSALARYDIFFERENCE
t.test(salaryAttrition$predictMinusObservered~trainValidationSet$Attrition, conf.level=.95)
t.test(salaryAttrition$predictMinusObservered~trainValidationSet$Attrition, conf.level=.99)
trainFact
trainSetFact
TTEST_ATT_OVERTIME<-t.test(trainValidationSet$OverTime~trainValidationSet$Attrition, conf.level =0.95)
t.test(trainValidationSet$OverTime~trainValidationSet$Attrition, conf.level =0.95)
trainValidationSet$OverTime
TTEST_ATT_OVERTIME<-t.test(trainValidationSet$OverTime~trainValidationSet$Attrition, conf.level =0.95)
att_pruned %>% filter_if(is.character)
att_pruned %>% filter_if(is.character())
att_pruned
salaryAttrition %>%
group_by(Attrition) %>%
summarise(mean(predictMinusObservered, na.rm=TRUE)) %>%
mutate("Avg. Difference between Predicted & Actual($)"=round(2)) %>%
mutate(Attrition=ifelse(Attrition==1,"Yes","No")) %>% kable()
salaryAttrition %>%
group_by(Attrition) %>%
summarise(mean(predictMinusObservered, na.rm=TRUE)) %>%
rename("Avg. Difference between Predicted & Actual($)"=2) %>%
mutate("Avg. Difference between Predicted & Actual($)"= round("Avg. Difference between Predicted & Actual($)"))
salaryAttrition %>%
group_by(Attrition) %>%
summarise(mean(predictMinusObservered, na.rm=TRUE)) %>%
rename("Avg. Difference between Predicted & Actual($)"=2) %>%
mutate("Avg. Difference between Predicted & Actual($)"= round(as.numeric(`Avg. Difference between Predicted & Actual($)`)))
mutate(Attrition=ifelse(Attrition==1,"Yes","No")) %>% kable()
salaryAttrition %>%
group_by(Attrition) %>%
summarise(mean(predictMinusObservered, na.rm=TRUE)) %>%
rename("Avg. Difference between Predicted & Actual($)"=2) %>%
mutate("Avg. Difference between Predicted & Actual($)"= round(as.numeric(`Avg. Difference between Predicted & Actual($)`))) %>%
mutate(Attrition=ifelse(Attrition==1,"Yes","No")) %>% kable()
salaryAttrition %>%
group_by(Attrition) %>%
summarise(mean(predictMinusObservered, na.rm=TRUE)) %>%
rename("Avg. Difference between Predicted & Actual($)"=2) %>%
mutate("Avg. Difference between Predicted & Actual($)"= round((`Avg. Difference between Predicted & Actual($)`,2)) %>%
salaryAttrition %>%
group_by(Attrition) %>%
summarise(mean(predictMinusObservered, na.rm=TRUE)) %>%
rename("Avg. Difference between Predicted & Actual($)"=2) %>%
mutate("Avg. Difference between Predicted & Actual($)"= round((`Avg. Difference between Predicted & Actual($)`),2) %>%
mutate(Attrition=ifelse(Attrition==1,"Yes","No")) %>% kable()
salaryAttrition %>%
salaryAttrition %>%
group_by(Attrition) %>%
summarise(mean(predictMinusObservered, na.rm=TRUE)) %>%
rename("Avg. Difference between Predicted & Actual($)"=2) %>%
mutate("Avg. Difference between Predicted & Actual($)"= round(`Avg. Difference between Predicted & Actual($)`,2) %>%
mutate(Attrition=ifelse(Attrition==1,"Yes","No")) %>% kable()
)
salaryAttrition %>%
group_by(Attrition) %>%
summarise(mean(predictMinusObservered, na.rm=TRUE)) %>%
rename("Avg. Difference between Predicted & Actual($)"=2) %>%
mutate("Avg. Difference between Predicted & Actual($)"= round(`Avg. Difference between Predicted & Actual($)`,2)) %>%
mutate(Attrition=ifelse(Attrition==1,"Yes","No")) %>% kable()
salaryAttrition %>%
group_by(Attrition) %>%
summarise(mean(predictMinusObservered, na.rm=TRUE)) %>%
rename("Avg. Difference between Predicted & Actual($)"=2) %>%
mutate("Avg. Difference between Predicted & Actual($)"= -round(`Actual vs Predicted Income($)`,2)) %>%
mutate(Attrition=ifelse(Attrition==1,"Yes","No")) %>% kable()
salaryAttrition %>%
group_by(Attrition) %>%
summarise(mean(predictMinusObservered, na.rm=TRUE)) %>%
rename("Avg. Difference between Predicted & Actual($)"=2) %>%
mutate("Avg. Difference between Predicted & Actual($)"= -1*round(`Actual vs Predicted Income($)`,2)) %>%
mutate(Attrition=ifelse(Attrition==1,"Yes","No")) %>% kable()
salaryAttrition %>%
group_by(Attrition) %>%
summarise(mean(predictMinusObservered, na.rm=TRUE)) %>%
rename("Avg. Difference between Predicted & Actual($)"=2) %>%
mutate("Avg. Difference between Predicted & Actual($)"= round(`Actual vs Predicted Income($)`,2)) %>%
mutate(Attrition=ifelse(Attrition==1,"Yes","No")) %>% kable()
salaryAttrition %>%
group_by(Attrition) %>%
summarise(mean(predictMinusObservered, na.rm=TRUE)) %>%
rename("Actual vs Predicted Income($)"=2) %>%
mutate("Actual vs Predicted Income($)"= -1*round(`Actual vs Predicted Income($)`,2)) %>%
mutate(Attrition=ifelse(Attrition==1,"Yes","No")) %>% kable()
salaryAttrition %>%
group_by(Attrition) %>%
summarise(mean(predictMinusObservered, na.rm=TRUE)) %>%
rename("Actual vs Predicted Income($)"=2) %>%
mutate("Actual vs Predicted Income($)"= -1*round(`Actual vs Predicted Income($)`,2)) %>%  #*-1 to make it actuals subtract predicted
mutate(Attrition=ifelse(Attrition==1,"Yes","No")) %>% kable()
